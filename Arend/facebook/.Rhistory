"13:00",
"14:00",
"15:00",
"16:00",
"17:00",
"18:00",
"19:00",
"20:00",
"21:00"))
feedback
View(mydata)
View(data_filtered)
ggplot(data=mydata[mydata$likes<100,], aes(x=ll, y=feedback, colour=status_type)) +
geom_point(alpha=0.2, size=2) +
ylim(0, 75) +
ggtitle("Facebook Feedback nach Uhrzeit des Posts") +
xlab("Uhrzeit") +
ylab("Anzahl Likes") +
scale_x_discrete(limits=c("05:00",
"06:00",
"07:00",
"08:00",
"09:00",
"10:00",
"11:00",
"12:00",
"13:00",
"14:00",
"15:00",
"16:00",
"17:00",
"18:00",
"19:00",
"20:00",
"21:00"))
ggplot(data=mydata[mydata$likes<100,], aes(x=ll, y=feedback, colour=status_type)) +
geom_point(alpha=0.2, size=3) +
ylim(0, 75) +
ggtitle("Facebook Feedback nach Uhrzeit des Posts") +
xlab("Uhrzeit") +
ylab("Anzahl Likes") +
scale_x_discrete(limits=c("05:00",
"06:00",
"07:00",
"08:00",
"09:00",
"10:00",
"11:00",
"12:00",
"13:00",
"14:00",
"15:00",
"16:00",
"17:00",
"18:00",
"19:00",
"20:00",
"21:00"))
ggplot(data=mydata[mydata$likes<100,], aes(x=ll, y=feedback, colour=status_type)) +
geom_point(alpha=0.2, size=2.5) +
ylim(0, 75) +
ggtitle("Facebook Feedback nach Uhrzeit des Posts") +
xlab("Uhrzeit") +
ylab("Anzahl Likes") +
scale_x_discrete(limits=c("05:00",
"06:00",
"07:00",
"08:00",
"09:00",
"10:00",
"11:00",
"12:00",
"13:00",
"14:00",
"15:00",
"16:00",
"17:00",
"18:00",
"19:00",
"20:00",
"21:00"))
ggplot(data=mydata[mydata$likes<100,], aes(x=ll, y=feedback, colour=status_type)) +
geom_point(alpha=0.1, size=2) +
ylim(0, 75) +
ggtitle("Facebook Feedback nach Uhrzeit des Posts") +
xlab("Uhrzeit") +
ylab("Anzahl Likes") +
scale_x_discrete(limits=c("05:00",
"06:00",
"07:00",
"08:00",
"09:00",
"10:00",
"11:00",
"12:00",
"13:00",
"14:00",
"15:00",
"16:00",
"17:00",
"18:00",
"19:00",
"20:00",
"21:00"))
ggplot(data=mydata[mydata$likes<100,], aes(x=ll, y=feedback, colour=status_type)) +
geom_point(alpha=0.4, size=2) +
ylim(0, 75) +
ggtitle("Facebook Feedback nach Uhrzeit des Posts") +
xlab("Uhrzeit") +
ylab("Anzahl Likes") +
scale_x_discrete(limits=c("05:00",
"06:00",
"07:00",
"08:00",
"09:00",
"10:00",
"11:00",
"12:00",
"13:00",
"14:00",
"15:00",
"16:00",
"17:00",
"18:00",
"19:00",
"20:00",
"21:00"))
ggplot(data=mydata[mydata$likes<100,], aes(x=ll, y=feedback, colour=status_type)) +
geom_point(alpha=0.2, size=2) +
ylim(0, 75) +
ggtitle("Facebook Feedback nach Uhrzeit des Posts") +
xlab("Uhrzeit") +
ylab("Anzahl Likes") +
scale_x_discrete(limits=c("05:00",
"06:00",
"07:00",
"08:00",
"09:00",
"10:00",
"11:00",
"12:00",
"13:00",
"14:00",
"15:00",
"16:00",
"17:00",
"18:00",
"19:00",
"20:00",
"21:00"))
ggplot(data=mydata[mydata$likes<100,], aes(x=ll, y=feedback)) +
geom_point(alpha=0.2, size=2) +
ylim(0, 75) +
ggtitle("Facebook Feedback nach Uhrzeit des Posts") +
xlab("Uhrzeit") +
ylab("Anzahl Likes") +
scale_x_discrete(limits=c("05:00",
"06:00",
"07:00",
"08:00",
"09:00",
"10:00",
"11:00",
"12:00",
"13:00",
"14:00",
"15:00",
"16:00",
"17:00",
"18:00",
"19:00",
"20:00",
"21:00"))
ggplot(data=mydata[mydata$likes<100,], aes(x=ll, y=feedback)) +
geom_point(alpha=0.2, size=3) +
ylim(0, 50) +
ggtitle("Facebook Feedback nach Uhrzeit des Posts") +
xlab("Uhrzeit") +
ylab("Anzahl Likes") +
scale_x_discrete(limits=c("05:00",
"06:00",
"07:00",
"08:00",
"09:00",
"10:00",
"11:00",
"12:00",
"13:00",
"14:00",
"15:00",
"16:00",
"17:00",
"18:00",
"19:00",
"20:00",
"21:00"))
ggplot(data=mydata[mydata$likes<100,], aes(x=ll, y=feedback)) +
geom_point(alpha=0.1, size=3) +
ylim(0, 50) +
ggtitle("Facebook Feedback nach Uhrzeit des Posts") +
xlab("Uhrzeit") +
ylab("Anzahl Likes") +
scale_x_discrete(limits=c("05:00",
"06:00",
"07:00",
"08:00",
"09:00",
"10:00",
"11:00",
"12:00",
"13:00",
"14:00",
"15:00",
"16:00",
"17:00",
"18:00",
"19:00",
"20:00",
"21:00"))
ggplot(data=mydata[mydata$likes<100,], aes(x=ll, y=feedback)) +
geom_point(alpha=0.15, size=3) +
ylim(0, 50) +
ggtitle("Facebook Feedback nach Uhrzeit des Posts") +
xlab("Uhrzeit") +
ylab("Anzahl Likes") +
scale_x_discrete(limits=c("05:00",
"06:00",
"07:00",
"08:00",
"09:00",
"10:00",
"11:00",
"12:00",
"13:00",
"14:00",
"15:00",
"16:00",
"17:00",
"18:00",
"19:00",
"20:00",
"21:00"))
ggplot(data=mydata[mydata$likes<100,], aes(x=ll, y=feedback)) +
geom_point(alpha=0.15, size=3, colour="blue") +
ylim(0, 50) +
ggtitle("Facebook Feedback nach Uhrzeit des Posts") +
xlab("Uhrzeit") +
ylab("Anzahl Likes") +
scale_x_discrete(limits=c("05:00",
"06:00",
"07:00",
"08:00",
"09:00",
"10:00",
"11:00",
"12:00",
"13:00",
"14:00",
"15:00",
"16:00",
"17:00",
"18:00",
"19:00",
"20:00",
"21:00"))
ggplot(data=mydata[mydata$likes<100,], aes(x=ll, y=feedback)) +
geom_point(alpha=0.15, size=3, colour="red") +
ylim(0, 50) +
ggtitle("Facebook Feedback nach Uhrzeit des Posts") +
xlab("Uhrzeit") +
ylab("Anzahl Likes") +
scale_x_discrete(limits=c("05:00",
"06:00",
"07:00",
"08:00",
"09:00",
"10:00",
"11:00",
"12:00",
"13:00",
"14:00",
"15:00",
"16:00",
"17:00",
"18:00",
"19:00",
"20:00",
"21:00"))
ggplot(data=mydata[mydata$likes<100,], aes(x=ll, y=feedback)) +
geom_point(alpha=0.15, size=4, colour="red") +
ylim(0, 50) +
ggtitle("Facebook Feedback nach Uhrzeit des Posts") +
xlab("Uhrzeit") +
ylab("Anzahl Likes") +
scale_x_discrete(limits=c("05:00",
"06:00",
"07:00",
"08:00",
"09:00",
"10:00",
"11:00",
"12:00",
"13:00",
"14:00",
"15:00",
"16:00",
"17:00",
"18:00",
"19:00",
"20:00",
"21:00"))
ggplot(data=mydata[mydata$likes<100,], aes(x=ll, y=feedback)) +
geom_point(alpha=0.15, size=5, colour="red") +
ylim(0, 50) +
ggtitle("Facebook Feedback nach Uhrzeit des Posts") +
xlab("Uhrzeit") +
ylab("Anzahl Likes") +
scale_x_discrete(limits=c("05:00",
"06:00",
"07:00",
"08:00",
"09:00",
"10:00",
"11:00",
"12:00",
"13:00",
"14:00",
"15:00",
"16:00",
"17:00",
"18:00",
"19:00",
"20:00",
"21:00"))
ggplot(data=mydata[mydata$likes<100,], aes(x=ll, y=feedback)) +
geom_point(alpha=0.2, size=5, colour="red") +
ylim(0, 50) +
ggtitle("Facebook Feedback nach Uhrzeit des Posts") +
xlab("Uhrzeit") +
ylab("Anzahl Likes") +
scale_x_discrete(limits=c("05:00",
"06:00",
"07:00",
"08:00",
"09:00",
"10:00",
"11:00",
"12:00",
"13:00",
"14:00",
"15:00",
"16:00",
"17:00",
"18:00",
"19:00",
"20:00",
"21:00"))
ggplot(data=mydata[mydata$likes<100,], aes(x=ll, y=feedback)) +
geom_point(alpha=0.1, size=5, colour="red") +
ylim(0, 50) +
ggtitle("Facebook Feedback nach Uhrzeit des Posts") +
xlab("Uhrzeit") +
ylab("Anzahl Likes") +
scale_x_discrete(limits=c("05:00",
"06:00",
"07:00",
"08:00",
"09:00",
"10:00",
"11:00",
"12:00",
"13:00",
"14:00",
"15:00",
"16:00",
"17:00",
"18:00",
"19:00",
"20:00",
"21:00"))
ggplot(data=mydata[mydata$likes<100,], aes(x=ll, y=feedback)) +
geom_point(alpha=0.2, size=5, colour="red") +
ylim(0, 50) +
ggtitle("Facebook Feedback nach Uhrzeit des Posts") +
xlab("Uhrzeit") +
ylab("Anzahl Likes") +
scale_x_discrete(limits=c("05:00",
"06:00",
"07:00",
"08:00",
"09:00",
"10:00",
"11:00",
"12:00",
"13:00",
"14:00",
"15:00",
"16:00",
"17:00",
"18:00",
"19:00",
"20:00",
"21:00"))
ggplot(data=mydata[mydata$likes<100,], aes(x=ll, y=feedback)) +
geom_point(alpha=0.2, size=5, colour="black") +
ylim(0, 50) +
ggtitle("Facebook Feedback nach Uhrzeit des Posts") +
xlab("Uhrzeit") +
ylab("Anzahl Likes") +
scale_x_discrete(limits=c("05:00",
"06:00",
"07:00",
"08:00",
"09:00",
"10:00",
"11:00",
"12:00",
"13:00",
"14:00",
"15:00",
"16:00",
"17:00",
"18:00",
"19:00",
"20:00",
"21:00"))
clear
clear()
library(twitteR)
library(tm)
library(wordcloud)
library(RColorBrewer)
install.packages("twitteR")
install.packages("tm")
install.packages("wordcloud")
install.packages("RColorBrewer")
install.packages("RColorBrewer")
library(twitteR)
library(tm)
library(wordcloud)
library(RColorBrewer)
mach_tweets = searchTwitter("guild wars 2", n=500, lang="en")
twitter_data <- read.csv(file.choose())
View(twitter_data)
text <- twitter_data$content
content
text
tdm = TermDocumentMatrix(text,
control = list(removePunctuation = TRUE,
stopwords = c("machine", "learning", stopwords("english")),
removeNumbers = TRUE, tolower = TRUE))
mach_corpus = Corpus(VectorSource(text))
mach_corpus
tdm = TermDocumentMatrix(text,
control = list(removePunctuation = TRUE,
stopwords = c("machine", "learning", stopwords("english")),
removeNumbers = TRUE, tolower = TRUE))
tdm = TermDocumentMatrix(mach_corpus,
control = list(removePunctuation = TRUE,
stopwords = c("machine", "learning", stopwords("english")),
removeNumbers = TRUE, tolower = TRUE))
# define tdm as matrix
m = as.matrix(tdm)
# get word counts in decreasing order
word_freqs = sort(rowSums(m), decreasing=TRUE)
# create a data frame with words and their frequencies
dm = data.frame(word=names(word_freqs), freq=word_freqs)
wordcloud(dm$word, dm$freq, random.order=FALSE, colors=brewer.pal(8, "Dark2"))
tdm = TermDocumentMatrix(mach_corpus,
control = list(removePunctuation = TRUE,
stopwords = c("automation", "learning", stopwords("german")),
removeNumbers = TRUE, tolower = TRUE))
# define tdm as matrix
m = as.matrix(tdm)
# get word counts in decreasing order
word_freqs = sort(rowSums(m), decreasing=TRUE)
# create a data frame with words and their frequencies
dm = data.frame(word=names(word_freqs), freq=word_freqs)
wordcloud(dm$word, dm$freq, random.order=FALSE, colors=brewer.pal(8, "Dark2"))
tdm = TermDocumentMatrix(mach_corpus,
control = list(removePunctuation = TRUE,
stopwords = c("machine", "learning", stopwords("german")),
removeNumbers = FALSE, tolower = TRUE))
# define tdm as matrix
m = as.matrix(tdm)
# get word counts in decreasing order
word_freqs = sort(rowSums(m), decreasing=TRUE)
# create a data frame with words and their frequencies
dm = data.frame(word=names(word_freqs), freq=word_freqs)
# plot wordcloud
wordcloud(dm$word, dm$freq, random.order=FALSE, colors=brewer.pal(8, "Dark2"))
tdm = TermDocumentMatrix(mach_corpus,
control = list(removePunctuation = TRUE,
stopwords = c("machine", "learning", stopwords("german", "english")),
removeNumbers = FALSE, tolower = TRUE))
dm
tdm = TermDocumentMatrix(mach_corpus,
control = list(removePunctuation = TRUE,
stopwords = c("fc3bcr", "learning", stopwords("german")),
removeNumbers = FALSE, tolower = TRUE))
# define tdm as matrix
m = as.matrix(tdm)
# get word counts in decreasing order
word_freqs = sort(rowSums(m), decreasing=TRUE)
# create a data frame with words and their frequencies
dm = data.frame(word=names(word_freqs), freq=word_freqs)
dm
# plot wordcloud
wordcloud(dm$word, dm$freq, random.order=FALSE, colors=brewer.pal(8, "Dark2"))
png("TwitterGesamtCloud.png", width=12, height=8, units="in", res=300)
wordcloud(dm$word, dm$freq, random.order=FALSE, colors=brewer.pal(8, "Dark2"))
dev.off()
